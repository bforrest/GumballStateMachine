<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Magnum.ForNHibernate</name>
    </assembly>
    <members>
        <member name="M:Magnum.ForNHibernate.Auditing.ExtensionsToConfiguration.AddAuditEventListeners(NHibernate.Cfg.Configuration,Magnum.Channels.UntypedChannel)">
            <summary>
            Examines the channel network and identifies any audit event consumers and connects
            the appropriate event listeners to the NHibernate configuration so that events are
            sent from NHibernate to the channel network
            </summary>
            <param name="cfg">The NHibernate configuration being modified</param>
            <param name="channel">The channel containing the audit event listeners</param>
        </member>
        <member name="T:Magnum.ForNHibernate.Channels.Configuration.NHibernateChannelProviderConfigurator`3">
            <summary>
            Configures an NHibernate channel provider
            </summary>
            <typeparam name="TInstance"></typeparam>
            <typeparam name="TChannel"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Magnum.ForNHibernate.Channels.NHibernateInstanceChannel`3">
            <summary>
            A channel that sends a message to a persistent instance that implements
            the channel
            </summary>
            <typeparam name="TInstance">The class type stored in the database</typeparam>
            <typeparam name="TChannel">The channel type of the message</typeparam>
            <typeparam name="TKey">The key type used by the message and the class</typeparam>
        </member>
        <member name="T:Magnum.ForNHibernate.Channels.NHibernateInstanceChannelProvider`3">
            <summary>
            Gets an instance of a class from the InstanceProvider and returns the channel
            from that class
            </summary>
            <typeparam name="TInstance">The instance type</typeparam>
            <typeparam name="TChannel">The channel type</typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="T:Magnum.ForNHibernate.Channels.SessionProvider`1">
            <summary>
            Defines a delegate that returns an NHibernate session appropriate for the message
            that was received.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Magnum.ForNHibernate.Data.Primitives.PrimitiveUserType`2">
            <summary>
            An NHibernate user type for storing a primitives
            </summary>
        </member>
        <member name="T:Magnum.ForNHibernate.StateMachine.StateMachineUserType">
            <summary>
            An NHibernate user type for persisting state machines current state
            </summary>
        </member>
        <member name="T:Magnum.ForNHibernate.UriUserType">
            <summary>
            An NHibernate user type for storing a Uri
            </summary>
        </member>
    </members>
</doc>
